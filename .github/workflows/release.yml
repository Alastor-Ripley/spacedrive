name: Release

on:
  pull_request:
    paths:
      - '.github/workflows/release.yml'
      - '.github/actions/publish-artifacts/**'
  workflow_dispatch:

# From: https://github.com/rust-lang/rust-analyzer/blob/master/.github/workflows/release.yaml#L13-L21
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  desktop-main:
    strategy:
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            bundles: msi
            os: windows
            arch: x86_64
          # - host: windows-latest
          #   target: aarch64-pc-windows-msvc
          - host: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bundles: deb
            os: linux
            arch: x86_64
          # - host: ubuntu-22.04
          #   target: x86_64-unknown-linux-musl
          # - host: ubuntu-22.04
          #   target: aarch64-unknown-linux-gnu
          #   bundles: deb
          # - host: ubuntu-22.04
          #   target: aarch64-unknown-linux-musl
    name: Desktop - Main ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Maximize build space
        if: ${{ runner.os == 'Linux' }}
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 3072
          root-reserve-mb: 6144
          remove-dotnet: 'true'
          remove-codeql: 'true'
          remove-haskell: 'true'
          remove-docker-images: 'true'

      - name: Symlink target to C:\
        if: ${{ runner.os == 'Windows' }}
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path C:\spacedrive_target
          New-Item -Path target -ItemType Junction -Value C:\spacedrive_target

      - name: Checkout repository
        uses: actions/checkout@v4

      
      - name: Setup System and Rust
        uses: ./.github/actions/setup-system
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.settings.target }}

      - name: Setup Node.js, pnpm and dependencies
        uses: ./.github/actions/setup-pnpm
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          pnpm tauri build --ci -v --target ${{ matrix.settings.target }} --bundles ${{ matrix.settings.bundles }}
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Package frontend
        if: ${{ runner.os == 'Linux' }}
        run: |
          set -eux
          XZ_OPT='-T0 -7' tar -cJf apps/desktop/dist.tar.xz -C apps/desktop/dist .

      - name: Publish Artifacts
        uses: ./.github/actions/publish-artifacts
        with:
          os: ${{ matrix.settings.os }}
          arch: ${{ matrix.settings.arch }}
          target: ${{ matrix.settings.target }}
          profile: release

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    name: Create Release
    needs: desktop-main
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        # TODO: Change to stable version when available
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: '*/**'
